# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
  batch: true
  paths:
    exclude:
      - README.md
      - LICENCE.txt
      - modd.conf
      - .gitignore

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.13' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up Go'

- script: |
    go version
    go get -v -t -d ./...
  workingDirectory: '$(modulePath)'
  displayName: 'Fetch Code'

- script: |
    curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b '$(GOBIN)' v1.21.0
    golangci-lint run -c .golangci.toml
  workingDirectory: '$(modulePath)'
  displayName: Lint

- script: |
    go test -coverprofile=coverage.out ./...
  workingDirectory: '$(modulePath)'
  displayName: Run Tests

- script: |
    bash <(curl -s https://codecov.io/bash); true
  workingDirectory: '$(modulePath)'
  displayName: Coverage
